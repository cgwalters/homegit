# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# User specific aliases and functions

alias l='longrun'
alias g-d='git diff'
alias g-am='git commit -a --amend'
alias g-amf='git commit -a --amend --no-edit'
alias g-c='git commit -a'
alias jhm='jhbuild make'
alias mock='chrt --idle 0 mock'
alias fedpkg='chrt --idle 0 fedpkg'
alias rhpkg='chrt --idle 0 rhpkg'

# https://lists.projectatomic.io/projectatomic-archives/atomic-devel/2015-September/msg00027.html
LUC_DEFAULTS="--unshare-ipc --unshare-pid --mount-devapi /dev --mount-proc /proc --seccomp-profile-version 0"
alias luc="linux-user-chroot ${LUC_DEFAULTS} --unshare-net "'--chdir $(pwd) / '
alias luc-net="linux-user-chroot ${LUC_DEFAULTS} "'--chdir $(pwd) /'
alias make='luc chrt --idle 0 make -j 4'
alias make-net='luc-net chrt --idle 0 make -j 4'
alias m='make'

if test -x /usr/bin/rpm-ostree && rpm-ostree --help |grep -q install; then
   alias pkg=/usr/bin/rpm-ostree
else
  for p in /usr/bin/yum /usr/bin/dnf /usr/bin/apt-get; do
    if test -x $p; then
      alias pkg=$p
      break
    fi
  done
fi

if [ -f /etc/bash_completion ]; then
  . /etc/bash_completion
fi

export PATH="$HOME/.local/bin:$PATH"

HISTSIZE=5000
export HISTSIZE
shopt -s histappend

LAST_HISTORY_WRITE=$SECONDS
function save_history_prompt_command {
    if [ $(($SECONDS - $LAST_HISTORY_WRITE)) -gt 60 ]; then
        history -a && history -c && history -r
        LAST_HISTORY_WRITE=$SECONDS
    fi
}

if test -n "${PROMPT_COMMAND}"; then
  PROMPT_COMMAND="$PROMPT_COMMAND; save_history_prompt_command"
else
  PROMPT_COMMAND="save_history_prompt_command"
fi

EDITOR="emacsclient"
export EDITOR

_format_last_err ()
{
  local r=$?
  if ! [ $r -eq 0 ]; then
    echo -e -n '\e[1;31m[exit '$r']\e[0m '
  fi
}

_format_wd ()
{
  pwd=$(pwd)
  base=$(basename "$pwd")
  parent=$(basename $(dirname "$pwd")) 
  pparent=$(basename $(dirname "$parent")) 
  if test "$pparent" != "/"; then
    echo -n "$parent/";
    echo -n "$base";
  else 
    if test "$parent" != "/"; then
      echo -n "/$parent/"
      echo -n "$base";
    else
      echo -n "/";
      echo -n "$base";
    fi
  fi
}

_format_inroot_dir ()
{
  if test -n "$INROOT_DIR"; then
    echo " [root=$INROOT_DIR]"
  else
    if test -n "$CERTIFIED_GNOMIE"; then
      if test -z "$JHBUILD_PREFIX"; then
        JHBUILD_PREFIX=$MONO_GAC_PREFIX
      fi
      echo " [jhbuild=${JHBUILD_PREFIX}]"
    fi
  fi

  if test -n "$X_SCLS"; then
    echo " [scls:${X_SCLS%% }]"
  fi

  if test -n "$OS_PROJECT_NAME"; then
    echo " [osproj:${OS_PROJECT_NAME}]"
  fi
}

_format_screen ()
{
  if test -n "$WINDOW"; then
    echo -n " [scr:$WINDOW]";
  fi
}

_format_uid ()
{
  if test $(id -u) = '0'; then
    echo -n " <"; echo -n "uid=0"; echo -n ">"; 
  fi
}

PS1_PREFIX='$(_format_last_err)$(_format_wd)$(_format_screen)$(_format_uid)$(_format_inroot_dir)'

if test -f /usr/share/git-core/contrib/completion/git-prompt.sh; then
  source /usr/share/git-core/contrib/completion/git-prompt.sh
  have_git_ps1=true
else if test -n "$BASH_COMPLETION" && test -f /etc/bash_completion.d/git; then
  have_git_ps1=true
fi
fi

if $have_git_ps1; then
  PS1_PREFIX="$PS1_PREFIX"'$(__git_ps1 " [git %s]")'
fi

PS1="$PS1_PREFIX"'\n\$ '
export PS1

