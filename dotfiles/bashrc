# -*- mode: sh -*-

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# User specific aliases and functions

alias l='longrun'
alias g-d='git diff'
alias g-am='git commit -a --amend --no-edit'
alias g-amr='git commit -a --amend'
alias g-c='git commit -a'
alias jhm='jhbuild make'
alias make='chrt --idle 0 make -j $(getconf _NPROCESSORS_ONLN)'
alias mock='chrt --idle 0 mock'
alias fedpkg='chrt --idle 0 fedpkg'
alias rhpkg='chrt --idle 0 rhpkg'

alias vagrant='env -u SSH_AUTH_SOCK vagrant'
alias vssh='vagrant up && vagrant ssh'
alias vrssh='vagrant up && vagrant ssh -c "sudo su -"'

alias podman-f27='sudo su -c "podman run --rm -ti --privileged -v /run/user/1000/keyring:/run/user/1000/keyring -v /var/tmp:/var/tmp -v /srv:/srv:rslave -v /run/libvirt:/run/libvirt --net=host cgwalters/fedora-dev:28"'
alias podman-f28='sudo su -c "podman run --rm -ti --privileged -v /run/user/1000/keyring:/run/user/1000/keyring -v /var/tmp:/var/tmp -v /srv:/srv:rslave -v /run/libvirt:/run/libvirt --net=host cgwalters/fedora-dev:27"'

export PATH="$HOME/.local/bin:$PATH"
if test -z "${SSH_AUTH_SOCK:-}"; then
   export SSH_AUTH_SOCK=${XDG_RUNTIME_DIR}/keyring/ssh
fi

HISTCONTROL=ignoreboth
export HISTSIZE=5000
shopt -s histappend

LAST_HISTORY_WRITE=$SECONDS
function save_history_prompt_command {
    if [ $(($SECONDS - $LAST_HISTORY_WRITE)) -gt 60 ]; then
        history -a && history -c && history -r
        LAST_HISTORY_WRITE=$SECONDS
    fi
}

if test -n "${PROMPT_COMMAND}"; then
  PROMPT_COMMAND="$PROMPT_COMMAND; save_history_prompt_command"
else
  PROMPT_COMMAND="save_history_prompt_command"
fi

if test -x /usr/bin/vim; then
    EDITOR=vim
else
    EDITOR=vi
fi
export EDITOR

bold=$(tput bold)
normal=$(tput sgr0)

# Last command status
_format_last_err ()
{
  local r=$?
  if ! [ $r -eq 0 ]; then
    echo -e -n '\e[1;31m[exit '$r']\e[0m '
  fi
}

# Only print the top two directories
_format_wd ()
{
  pwd=$(pwd)
  base=$(basename "$pwd")
  parent=$(basename $(dirname "$pwd"))
  pparent=$(basename $(dirname "$parent"))
  if test "$pparent" != "/"; then
    echo -n "$parent/";
    echo -n "$base";
  else
    if test "$parent" != "/"; then
      echo -n "/$parent/"
      echo -n "$base";
    else
      echo -n "/";
      echo -n "$base";
    fi
  fi
}

# Context is privileges, container vs not
_format_ctx () {
    if test -f /run/ostree-booted; then
        echo -n "${bold:-}host${normal:-}:${USER}@$(hostname -s) "
    else
        # entrypoint.sh in my dev containers writes /run/container
        if test -z "${container:-}" && test -f /run/container; then
            container=$(cat /run/container)
            export container
        fi
        if test -n "${container:-}"; then
            local osid=""
            if test -f /etc/os-release; then
                osid=$(. /etc/os-release && echo ${ID}${VERSION_ID})
            else
                osid=$(hostname -s)
            fi
            local privprefix=
            if capsh --print |grep -qEe '^Current.*cap_sys_admin'; then
                privprefix="${bold:-}priv${normal:-}"
            fi
            local user=${USER}
            if test ${user} = root; then
                user="${bold:-}${user}${normal:-}"
            fi
            echo -n "${privprefix}container:${user}@${osid} "
        fi
    fi
}

PS1_PREFIX='$(_format_last_err)$(_format_ctx)$(_format_wd)'

if test -f /usr/share/git-core/contrib/completion/git-prompt.sh; then
  source /usr/share/git-core/contrib/completion/git-prompt.sh
  have_git_ps1=true
else if test -n "$BASH_COMPLETION" && test -f /etc/bash_completion.d/git; then
  have_git_ps1=true
fi
fi

if $have_git_ps1; then
  PS1_PREFIX="$PS1_PREFIX"'$(__git_ps1 " [git %s]")'
fi

PS1="$PS1_PREFIX"'\n\$ '
export PS1
