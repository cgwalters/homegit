#!/usr/bin/env bash

# Like git commit -a --fixup, except auto-fixup the last non-fixup commit.
# This makes it more convenient to generate a stream of fixups.
#
# Copyright 2016 Colin Walters <walters@verbum.org>
# Licensed under the new-BSD license (http://www.opensource.org/licenses/bsd-license.php)

set -euo pipefail

git_args=""
for arg in $@; do
    if [[ $arg == -* ]]; then
        git_args="$git_args $arg"
        shift
    fi
done
match=${1:-}
# Without a specific commit, use -a on the last non-fixup
if test -z "${match}"; then
    last_non_fixup=$(git log --format=oneline -1 --invert-grep --grep='^fixup! ')
    echo "Last non fixup: ${last_non_fixup}"
    rev=$(echo ${last_non_fixup} | awk '{ print $1 }')
    git commit -a $git_args --fixup "${rev}"
else
    # Otherwise, use the magic :/^ to find the last commit - we anchor to the
    # start by default to avoid hitting fixups, and since I think it's easiest.
    git commit $git_args --fixup ":/^${match}"
fi
